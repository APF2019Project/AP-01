@startuml

package being <<Rectangle>> {

	Class Location() {
		-x : int
		-y : int
		+dx : int
		+dy : int
		+move() : void
	}

	Class DNA {
		-image : Image
		-speed : int
		-powerOfDestruction: int
		+getImage : Image
		+getSpeed : int
		+getPowerOfDestruction: int
		+getLocation : Location
	}
	DNA o-- Creature

	Class Creature {
		-DNA dna
		-location : Location
		#getDNA() : DNA
		+getLocation() : Location
		+nextTurn() : void
	}



	DNA <|-- BeingDNA
	Class BeingDNA {
		-int firstHealth
		-int gameCost
		-int shopCost
		+getHealth()
		+getGameCost
		+getShopCost
	}
	Being o-- BeingDNA

	Being <|-- Creature
	Class Being {
		-health: int
		+attack() : void
		+reduceHealth() : void
	}

	package Plant <<Rectangle>> {

		Being <|-- Plant
		Class Plant {
			-sunRemainingCooldown : int
			-plantOnMe : Plant
			+createAmmunition() : void
			+createPlantOnMe() : void
		}
		BeingDNA <|-- PlantDNA
		Class PlantDNA {
			-ammunitionDna : AmmunitionDNA
			-sunIncome : int
			-sunCooldown : int
			-canContain : boolean
			+getAmmunitinoDna() : AmmunitionDNA
			+getSunIncome() : int
			+getCanContain : boolean
			#getAmmunitionDna : AmmunitionDNA
		}

	}

	package Zombie <<Rectangle>> {
		Being <|-- Zombie
		Class Zombie {
			+move : void
		}
		BeingDNA <|-- ZombieDNA
		Class ZombieDNA {
			ZombieDNA whenIDie;	
		}
	}

	package Ammunition <<Rectangle>> {
		DNA <|-- AmmunitionDNA
		Class AmmunitionDNA {
			-cooldown: int
			-staticTurnNumber : int
			-reduceSpeedRatio : int
			-minimumDistanceForShoot : int
			-crossingShield : boolean
			+getCooldown() : int
			+getStaticTurnNumber : int
			+getReduceSpeedRatio : int
			+getMinimumDistanceForShoot : int
			+getCrossingShield : boolean
		}
		Ammunition o-- AmmunitionDNA

		Class Ammunition {
			-remainingCooldown : int
		}
	}
}
@enduml
